name: Release_auto_update
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  changelog:
    name: changelog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: [changelog]
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [macOS-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run unit tests
        run: go test -v -race -cover -coverprofile coverage.txt -covermode=atomic ./...
      - name: Parse Event
        run: |
          echo "tag=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Build and pack
        run: |
          # build package
          GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w -X github.com/91go/gh-alfredworkflow/cmd.EnabledAutoUpdate=true" -o exe_amd64
          GOOS=darwin GOARCH=arm64 go build -ldflags "-s -w -X github.com/91go/gh-alfredworkflow/cmd.EnabledAutoUpdate=true" -o exe_arm64
          lipo -create -output .workflow/exe exe_amd64 exe_arm64
          rm  exe_amd64
          rm  exe_arm64

          # pack
          cd .workflow
          plutil -replace version -string "${{ env.tag }}" info.plist
          zip -r ../"gh-alfredworkflow_auto_update-${{ env.tag }}.alfredworkflow" .
          cd ..

          echo "artifact=$(echo "gh-alfredworkflow_auto_update-${{ env.tag }}.alfredworkflow")" >> $GITHUB_ENV
      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          generate_release_notes: true
      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "${{ env.artifact }}"
